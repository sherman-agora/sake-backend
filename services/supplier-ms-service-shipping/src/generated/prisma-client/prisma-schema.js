module.exports = {
        typeDefs: // Code generated by Prisma (prisma@1.34.10). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

/* GraphQL */ `type AggregateShipping {
  count: Int!
}

type AggregateShippingItem {
  count: Int!
}

type BatchPayload {
  count: Long!
}

scalar DateTime

scalar Long

type Mutation {
  createShipping(data: ShippingCreateInput!): Shipping!
  updateShipping(data: ShippingUpdateInput!, where: ShippingWhereUniqueInput!): Shipping
  updateManyShippings(data: ShippingUpdateManyMutationInput!, where: ShippingWhereInput): BatchPayload!
  upsertShipping(where: ShippingWhereUniqueInput!, create: ShippingCreateInput!, update: ShippingUpdateInput!): Shipping!
  deleteShipping(where: ShippingWhereUniqueInput!): Shipping
  deleteManyShippings(where: ShippingWhereInput): BatchPayload!
  createShippingItem(data: ShippingItemCreateInput!): ShippingItem!
  updateShippingItem(data: ShippingItemUpdateInput!, where: ShippingItemWhereUniqueInput!): ShippingItem
  updateManyShippingItems(data: ShippingItemUpdateManyMutationInput!, where: ShippingItemWhereInput): BatchPayload!
  upsertShippingItem(where: ShippingItemWhereUniqueInput!, create: ShippingItemCreateInput!, update: ShippingItemUpdateInput!): ShippingItem!
  deleteShippingItem(where: ShippingItemWhereUniqueInput!): ShippingItem
  deleteManyShippingItems(where: ShippingItemWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  shipping(where: ShippingWhereUniqueInput!): Shipping
  shippings(where: ShippingWhereInput, orderBy: ShippingOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Shipping]!
  shippingsConnection(where: ShippingWhereInput, orderBy: ShippingOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ShippingConnection!
  shippingItem(where: ShippingItemWhereUniqueInput!): ShippingItem
  shippingItems(where: ShippingItemWhereInput, orderBy: ShippingItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ShippingItem]!
  shippingItemsConnection(where: ShippingItemWhereInput, orderBy: ShippingItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ShippingItemConnection!
  node(id: ID!): Node
}

type Shipping {
  id: ID!
  code: String!
  purchaseOrderId: ID!
  userId: ID
  deliveryAt: DateTime
  unfinishedTax: Float
  totalPrice: Float
  createdAt: DateTime!
  updatedAt: DateTime!
  products(where: ShippingItemWhereInput, orderBy: ShippingItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ShippingItem!]
  state: ShippingState
}

type ShippingConnection {
  pageInfo: PageInfo!
  edges: [ShippingEdge]!
  aggregate: AggregateShipping!
}

input ShippingCreateInput {
  id: ID
  code: String!
  purchaseOrderId: ID!
  userId: ID
  deliveryAt: DateTime
  unfinishedTax: Float
  totalPrice: Float
  products: ShippingItemCreateManyWithoutShippingInput
  state: ShippingState
}

input ShippingCreateOneWithoutProductsInput {
  create: ShippingCreateWithoutProductsInput
  connect: ShippingWhereUniqueInput
}

input ShippingCreateWithoutProductsInput {
  id: ID
  code: String!
  purchaseOrderId: ID!
  userId: ID
  deliveryAt: DateTime
  unfinishedTax: Float
  totalPrice: Float
  state: ShippingState
}

type ShippingEdge {
  node: Shipping!
  cursor: String!
}

type ShippingItem {
  id: ID!
  shipping: Shipping!
  productId: ID!
  warehouseId: ID
  expiryDate: DateTime
  labelFrom: String
  labelTo: String
  expectedQuantity: Int
  quantity: Int
  price: Float
  totalPrice: Float
  deliveryDate: DateTime
  remarks: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ShippingItemConnection {
  pageInfo: PageInfo!
  edges: [ShippingItemEdge]!
  aggregate: AggregateShippingItem!
}

input ShippingItemCreateInput {
  id: ID
  shipping: ShippingCreateOneWithoutProductsInput!
  productId: ID!
  warehouseId: ID
  expiryDate: DateTime
  labelFrom: String
  labelTo: String
  expectedQuantity: Int
  quantity: Int
  price: Float
  totalPrice: Float
  deliveryDate: DateTime
  remarks: String
}

input ShippingItemCreateManyWithoutShippingInput {
  create: [ShippingItemCreateWithoutShippingInput!]
  connect: [ShippingItemWhereUniqueInput!]
}

input ShippingItemCreateWithoutShippingInput {
  id: ID
  productId: ID!
  warehouseId: ID
  expiryDate: DateTime
  labelFrom: String
  labelTo: String
  expectedQuantity: Int
  quantity: Int
  price: Float
  totalPrice: Float
  deliveryDate: DateTime
  remarks: String
}

type ShippingItemEdge {
  node: ShippingItem!
  cursor: String!
}

enum ShippingItemOrderByInput {
  id_ASC
  id_DESC
  productId_ASC
  productId_DESC
  warehouseId_ASC
  warehouseId_DESC
  expiryDate_ASC
  expiryDate_DESC
  labelFrom_ASC
  labelFrom_DESC
  labelTo_ASC
  labelTo_DESC
  expectedQuantity_ASC
  expectedQuantity_DESC
  quantity_ASC
  quantity_DESC
  price_ASC
  price_DESC
  totalPrice_ASC
  totalPrice_DESC
  deliveryDate_ASC
  deliveryDate_DESC
  remarks_ASC
  remarks_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ShippingItemPreviousValues {
  id: ID!
  productId: ID!
  warehouseId: ID
  expiryDate: DateTime
  labelFrom: String
  labelTo: String
  expectedQuantity: Int
  quantity: Int
  price: Float
  totalPrice: Float
  deliveryDate: DateTime
  remarks: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

input ShippingItemScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  productId: ID
  productId_not: ID
  productId_in: [ID!]
  productId_not_in: [ID!]
  productId_lt: ID
  productId_lte: ID
  productId_gt: ID
  productId_gte: ID
  productId_contains: ID
  productId_not_contains: ID
  productId_starts_with: ID
  productId_not_starts_with: ID
  productId_ends_with: ID
  productId_not_ends_with: ID
  warehouseId: ID
  warehouseId_not: ID
  warehouseId_in: [ID!]
  warehouseId_not_in: [ID!]
  warehouseId_lt: ID
  warehouseId_lte: ID
  warehouseId_gt: ID
  warehouseId_gte: ID
  warehouseId_contains: ID
  warehouseId_not_contains: ID
  warehouseId_starts_with: ID
  warehouseId_not_starts_with: ID
  warehouseId_ends_with: ID
  warehouseId_not_ends_with: ID
  expiryDate: DateTime
  expiryDate_not: DateTime
  expiryDate_in: [DateTime!]
  expiryDate_not_in: [DateTime!]
  expiryDate_lt: DateTime
  expiryDate_lte: DateTime
  expiryDate_gt: DateTime
  expiryDate_gte: DateTime
  labelFrom: String
  labelFrom_not: String
  labelFrom_in: [String!]
  labelFrom_not_in: [String!]
  labelFrom_lt: String
  labelFrom_lte: String
  labelFrom_gt: String
  labelFrom_gte: String
  labelFrom_contains: String
  labelFrom_not_contains: String
  labelFrom_starts_with: String
  labelFrom_not_starts_with: String
  labelFrom_ends_with: String
  labelFrom_not_ends_with: String
  labelTo: String
  labelTo_not: String
  labelTo_in: [String!]
  labelTo_not_in: [String!]
  labelTo_lt: String
  labelTo_lte: String
  labelTo_gt: String
  labelTo_gte: String
  labelTo_contains: String
  labelTo_not_contains: String
  labelTo_starts_with: String
  labelTo_not_starts_with: String
  labelTo_ends_with: String
  labelTo_not_ends_with: String
  expectedQuantity: Int
  expectedQuantity_not: Int
  expectedQuantity_in: [Int!]
  expectedQuantity_not_in: [Int!]
  expectedQuantity_lt: Int
  expectedQuantity_lte: Int
  expectedQuantity_gt: Int
  expectedQuantity_gte: Int
  quantity: Int
  quantity_not: Int
  quantity_in: [Int!]
  quantity_not_in: [Int!]
  quantity_lt: Int
  quantity_lte: Int
  quantity_gt: Int
  quantity_gte: Int
  price: Float
  price_not: Float
  price_in: [Float!]
  price_not_in: [Float!]
  price_lt: Float
  price_lte: Float
  price_gt: Float
  price_gte: Float
  totalPrice: Float
  totalPrice_not: Float
  totalPrice_in: [Float!]
  totalPrice_not_in: [Float!]
  totalPrice_lt: Float
  totalPrice_lte: Float
  totalPrice_gt: Float
  totalPrice_gte: Float
  deliveryDate: DateTime
  deliveryDate_not: DateTime
  deliveryDate_in: [DateTime!]
  deliveryDate_not_in: [DateTime!]
  deliveryDate_lt: DateTime
  deliveryDate_lte: DateTime
  deliveryDate_gt: DateTime
  deliveryDate_gte: DateTime
  remarks: String
  remarks_not: String
  remarks_in: [String!]
  remarks_not_in: [String!]
  remarks_lt: String
  remarks_lte: String
  remarks_gt: String
  remarks_gte: String
  remarks_contains: String
  remarks_not_contains: String
  remarks_starts_with: String
  remarks_not_starts_with: String
  remarks_ends_with: String
  remarks_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [ShippingItemScalarWhereInput!]
  OR: [ShippingItemScalarWhereInput!]
  NOT: [ShippingItemScalarWhereInput!]
}

type ShippingItemSubscriptionPayload {
  mutation: MutationType!
  node: ShippingItem
  updatedFields: [String!]
  previousValues: ShippingItemPreviousValues
}

input ShippingItemSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ShippingItemWhereInput
  AND: [ShippingItemSubscriptionWhereInput!]
  OR: [ShippingItemSubscriptionWhereInput!]
  NOT: [ShippingItemSubscriptionWhereInput!]
}

input ShippingItemUpdateInput {
  shipping: ShippingUpdateOneRequiredWithoutProductsInput
  productId: ID
  warehouseId: ID
  expiryDate: DateTime
  labelFrom: String
  labelTo: String
  expectedQuantity: Int
  quantity: Int
  price: Float
  totalPrice: Float
  deliveryDate: DateTime
  remarks: String
}

input ShippingItemUpdateManyDataInput {
  productId: ID
  warehouseId: ID
  expiryDate: DateTime
  labelFrom: String
  labelTo: String
  expectedQuantity: Int
  quantity: Int
  price: Float
  totalPrice: Float
  deliveryDate: DateTime
  remarks: String
}

input ShippingItemUpdateManyMutationInput {
  productId: ID
  warehouseId: ID
  expiryDate: DateTime
  labelFrom: String
  labelTo: String
  expectedQuantity: Int
  quantity: Int
  price: Float
  totalPrice: Float
  deliveryDate: DateTime
  remarks: String
}

input ShippingItemUpdateManyWithoutShippingInput {
  create: [ShippingItemCreateWithoutShippingInput!]
  delete: [ShippingItemWhereUniqueInput!]
  connect: [ShippingItemWhereUniqueInput!]
  set: [ShippingItemWhereUniqueInput!]
  disconnect: [ShippingItemWhereUniqueInput!]
  update: [ShippingItemUpdateWithWhereUniqueWithoutShippingInput!]
  upsert: [ShippingItemUpsertWithWhereUniqueWithoutShippingInput!]
  deleteMany: [ShippingItemScalarWhereInput!]
  updateMany: [ShippingItemUpdateManyWithWhereNestedInput!]
}

input ShippingItemUpdateManyWithWhereNestedInput {
  where: ShippingItemScalarWhereInput!
  data: ShippingItemUpdateManyDataInput!
}

input ShippingItemUpdateWithoutShippingDataInput {
  productId: ID
  warehouseId: ID
  expiryDate: DateTime
  labelFrom: String
  labelTo: String
  expectedQuantity: Int
  quantity: Int
  price: Float
  totalPrice: Float
  deliveryDate: DateTime
  remarks: String
}

input ShippingItemUpdateWithWhereUniqueWithoutShippingInput {
  where: ShippingItemWhereUniqueInput!
  data: ShippingItemUpdateWithoutShippingDataInput!
}

input ShippingItemUpsertWithWhereUniqueWithoutShippingInput {
  where: ShippingItemWhereUniqueInput!
  update: ShippingItemUpdateWithoutShippingDataInput!
  create: ShippingItemCreateWithoutShippingInput!
}

input ShippingItemWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  shipping: ShippingWhereInput
  productId: ID
  productId_not: ID
  productId_in: [ID!]
  productId_not_in: [ID!]
  productId_lt: ID
  productId_lte: ID
  productId_gt: ID
  productId_gte: ID
  productId_contains: ID
  productId_not_contains: ID
  productId_starts_with: ID
  productId_not_starts_with: ID
  productId_ends_with: ID
  productId_not_ends_with: ID
  warehouseId: ID
  warehouseId_not: ID
  warehouseId_in: [ID!]
  warehouseId_not_in: [ID!]
  warehouseId_lt: ID
  warehouseId_lte: ID
  warehouseId_gt: ID
  warehouseId_gte: ID
  warehouseId_contains: ID
  warehouseId_not_contains: ID
  warehouseId_starts_with: ID
  warehouseId_not_starts_with: ID
  warehouseId_ends_with: ID
  warehouseId_not_ends_with: ID
  expiryDate: DateTime
  expiryDate_not: DateTime
  expiryDate_in: [DateTime!]
  expiryDate_not_in: [DateTime!]
  expiryDate_lt: DateTime
  expiryDate_lte: DateTime
  expiryDate_gt: DateTime
  expiryDate_gte: DateTime
  labelFrom: String
  labelFrom_not: String
  labelFrom_in: [String!]
  labelFrom_not_in: [String!]
  labelFrom_lt: String
  labelFrom_lte: String
  labelFrom_gt: String
  labelFrom_gte: String
  labelFrom_contains: String
  labelFrom_not_contains: String
  labelFrom_starts_with: String
  labelFrom_not_starts_with: String
  labelFrom_ends_with: String
  labelFrom_not_ends_with: String
  labelTo: String
  labelTo_not: String
  labelTo_in: [String!]
  labelTo_not_in: [String!]
  labelTo_lt: String
  labelTo_lte: String
  labelTo_gt: String
  labelTo_gte: String
  labelTo_contains: String
  labelTo_not_contains: String
  labelTo_starts_with: String
  labelTo_not_starts_with: String
  labelTo_ends_with: String
  labelTo_not_ends_with: String
  expectedQuantity: Int
  expectedQuantity_not: Int
  expectedQuantity_in: [Int!]
  expectedQuantity_not_in: [Int!]
  expectedQuantity_lt: Int
  expectedQuantity_lte: Int
  expectedQuantity_gt: Int
  expectedQuantity_gte: Int
  quantity: Int
  quantity_not: Int
  quantity_in: [Int!]
  quantity_not_in: [Int!]
  quantity_lt: Int
  quantity_lte: Int
  quantity_gt: Int
  quantity_gte: Int
  price: Float
  price_not: Float
  price_in: [Float!]
  price_not_in: [Float!]
  price_lt: Float
  price_lte: Float
  price_gt: Float
  price_gte: Float
  totalPrice: Float
  totalPrice_not: Float
  totalPrice_in: [Float!]
  totalPrice_not_in: [Float!]
  totalPrice_lt: Float
  totalPrice_lte: Float
  totalPrice_gt: Float
  totalPrice_gte: Float
  deliveryDate: DateTime
  deliveryDate_not: DateTime
  deliveryDate_in: [DateTime!]
  deliveryDate_not_in: [DateTime!]
  deliveryDate_lt: DateTime
  deliveryDate_lte: DateTime
  deliveryDate_gt: DateTime
  deliveryDate_gte: DateTime
  remarks: String
  remarks_not: String
  remarks_in: [String!]
  remarks_not_in: [String!]
  remarks_lt: String
  remarks_lte: String
  remarks_gt: String
  remarks_gte: String
  remarks_contains: String
  remarks_not_contains: String
  remarks_starts_with: String
  remarks_not_starts_with: String
  remarks_ends_with: String
  remarks_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [ShippingItemWhereInput!]
  OR: [ShippingItemWhereInput!]
  NOT: [ShippingItemWhereInput!]
}

input ShippingItemWhereUniqueInput {
  id: ID
}

enum ShippingOrderByInput {
  id_ASC
  id_DESC
  code_ASC
  code_DESC
  purchaseOrderId_ASC
  purchaseOrderId_DESC
  userId_ASC
  userId_DESC
  deliveryAt_ASC
  deliveryAt_DESC
  unfinishedTax_ASC
  unfinishedTax_DESC
  totalPrice_ASC
  totalPrice_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  state_ASC
  state_DESC
}

type ShippingPreviousValues {
  id: ID!
  code: String!
  purchaseOrderId: ID!
  userId: ID
  deliveryAt: DateTime
  unfinishedTax: Float
  totalPrice: Float
  createdAt: DateTime!
  updatedAt: DateTime!
  state: ShippingState
}

enum ShippingState {
  CONFIRMED
  DELETE
}

type ShippingSubscriptionPayload {
  mutation: MutationType!
  node: Shipping
  updatedFields: [String!]
  previousValues: ShippingPreviousValues
}

input ShippingSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ShippingWhereInput
  AND: [ShippingSubscriptionWhereInput!]
  OR: [ShippingSubscriptionWhereInput!]
  NOT: [ShippingSubscriptionWhereInput!]
}

input ShippingUpdateInput {
  code: String
  purchaseOrderId: ID
  userId: ID
  deliveryAt: DateTime
  unfinishedTax: Float
  totalPrice: Float
  products: ShippingItemUpdateManyWithoutShippingInput
  state: ShippingState
}

input ShippingUpdateManyMutationInput {
  code: String
  purchaseOrderId: ID
  userId: ID
  deliveryAt: DateTime
  unfinishedTax: Float
  totalPrice: Float
  state: ShippingState
}

input ShippingUpdateOneRequiredWithoutProductsInput {
  create: ShippingCreateWithoutProductsInput
  update: ShippingUpdateWithoutProductsDataInput
  upsert: ShippingUpsertWithoutProductsInput
  connect: ShippingWhereUniqueInput
}

input ShippingUpdateWithoutProductsDataInput {
  code: String
  purchaseOrderId: ID
  userId: ID
  deliveryAt: DateTime
  unfinishedTax: Float
  totalPrice: Float
  state: ShippingState
}

input ShippingUpsertWithoutProductsInput {
  update: ShippingUpdateWithoutProductsDataInput!
  create: ShippingCreateWithoutProductsInput!
}

input ShippingWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  code: String
  code_not: String
  code_in: [String!]
  code_not_in: [String!]
  code_lt: String
  code_lte: String
  code_gt: String
  code_gte: String
  code_contains: String
  code_not_contains: String
  code_starts_with: String
  code_not_starts_with: String
  code_ends_with: String
  code_not_ends_with: String
  purchaseOrderId: ID
  purchaseOrderId_not: ID
  purchaseOrderId_in: [ID!]
  purchaseOrderId_not_in: [ID!]
  purchaseOrderId_lt: ID
  purchaseOrderId_lte: ID
  purchaseOrderId_gt: ID
  purchaseOrderId_gte: ID
  purchaseOrderId_contains: ID
  purchaseOrderId_not_contains: ID
  purchaseOrderId_starts_with: ID
  purchaseOrderId_not_starts_with: ID
  purchaseOrderId_ends_with: ID
  purchaseOrderId_not_ends_with: ID
  userId: ID
  userId_not: ID
  userId_in: [ID!]
  userId_not_in: [ID!]
  userId_lt: ID
  userId_lte: ID
  userId_gt: ID
  userId_gte: ID
  userId_contains: ID
  userId_not_contains: ID
  userId_starts_with: ID
  userId_not_starts_with: ID
  userId_ends_with: ID
  userId_not_ends_with: ID
  deliveryAt: DateTime
  deliveryAt_not: DateTime
  deliveryAt_in: [DateTime!]
  deliveryAt_not_in: [DateTime!]
  deliveryAt_lt: DateTime
  deliveryAt_lte: DateTime
  deliveryAt_gt: DateTime
  deliveryAt_gte: DateTime
  unfinishedTax: Float
  unfinishedTax_not: Float
  unfinishedTax_in: [Float!]
  unfinishedTax_not_in: [Float!]
  unfinishedTax_lt: Float
  unfinishedTax_lte: Float
  unfinishedTax_gt: Float
  unfinishedTax_gte: Float
  totalPrice: Float
  totalPrice_not: Float
  totalPrice_in: [Float!]
  totalPrice_not_in: [Float!]
  totalPrice_lt: Float
  totalPrice_lte: Float
  totalPrice_gt: Float
  totalPrice_gte: Float
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  products_every: ShippingItemWhereInput
  products_some: ShippingItemWhereInput
  products_none: ShippingItemWhereInput
  state: ShippingState
  state_not: ShippingState
  state_in: [ShippingState!]
  state_not_in: [ShippingState!]
  AND: [ShippingWhereInput!]
  OR: [ShippingWhereInput!]
  NOT: [ShippingWhereInput!]
}

input ShippingWhereUniqueInput {
  id: ID
  code: String
}

type Subscription {
  shipping(where: ShippingSubscriptionWhereInput): ShippingSubscriptionPayload
  shippingItem(where: ShippingItemSubscriptionWhereInput): ShippingItemSubscriptionPayload
}
`
      }
    