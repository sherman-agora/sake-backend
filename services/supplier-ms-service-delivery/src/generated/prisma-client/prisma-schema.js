module.exports = {
        typeDefs: // Code generated by Prisma (prisma@1.34.10). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

/* GraphQL */ `type AggregateDeliveryItem {
  count: Int!
}

type AggregateDeliveryNote {
  count: Int!
}

type BatchPayload {
  count: Long!
}

scalar DateTime

type DeliveryItem {
  id: ID!
  deliveryNote: DeliveryNote!
  productId: ID!
  itemId: ID!
  boxNum: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type DeliveryItemConnection {
  pageInfo: PageInfo!
  edges: [DeliveryItemEdge]!
  aggregate: AggregateDeliveryItem!
}

input DeliveryItemCreateInput {
  id: ID
  deliveryNote: DeliveryNoteCreateOneWithoutItemsInput!
  productId: ID!
  itemId: ID!
  boxNum: Int!
}

input DeliveryItemCreateManyWithoutDeliveryNoteInput {
  create: [DeliveryItemCreateWithoutDeliveryNoteInput!]
  connect: [DeliveryItemWhereUniqueInput!]
}

input DeliveryItemCreateWithoutDeliveryNoteInput {
  id: ID
  productId: ID!
  itemId: ID!
  boxNum: Int!
}

type DeliveryItemEdge {
  node: DeliveryItem!
  cursor: String!
}

enum DeliveryItemOrderByInput {
  id_ASC
  id_DESC
  productId_ASC
  productId_DESC
  itemId_ASC
  itemId_DESC
  boxNum_ASC
  boxNum_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type DeliveryItemPreviousValues {
  id: ID!
  productId: ID!
  itemId: ID!
  boxNum: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input DeliveryItemScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  productId: ID
  productId_not: ID
  productId_in: [ID!]
  productId_not_in: [ID!]
  productId_lt: ID
  productId_lte: ID
  productId_gt: ID
  productId_gte: ID
  productId_contains: ID
  productId_not_contains: ID
  productId_starts_with: ID
  productId_not_starts_with: ID
  productId_ends_with: ID
  productId_not_ends_with: ID
  itemId: ID
  itemId_not: ID
  itemId_in: [ID!]
  itemId_not_in: [ID!]
  itemId_lt: ID
  itemId_lte: ID
  itemId_gt: ID
  itemId_gte: ID
  itemId_contains: ID
  itemId_not_contains: ID
  itemId_starts_with: ID
  itemId_not_starts_with: ID
  itemId_ends_with: ID
  itemId_not_ends_with: ID
  boxNum: Int
  boxNum_not: Int
  boxNum_in: [Int!]
  boxNum_not_in: [Int!]
  boxNum_lt: Int
  boxNum_lte: Int
  boxNum_gt: Int
  boxNum_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [DeliveryItemScalarWhereInput!]
  OR: [DeliveryItemScalarWhereInput!]
  NOT: [DeliveryItemScalarWhereInput!]
}

type DeliveryItemSubscriptionPayload {
  mutation: MutationType!
  node: DeliveryItem
  updatedFields: [String!]
  previousValues: DeliveryItemPreviousValues
}

input DeliveryItemSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: DeliveryItemWhereInput
  AND: [DeliveryItemSubscriptionWhereInput!]
  OR: [DeliveryItemSubscriptionWhereInput!]
  NOT: [DeliveryItemSubscriptionWhereInput!]
}

input DeliveryItemUpdateInput {
  deliveryNote: DeliveryNoteUpdateOneRequiredWithoutItemsInput
  productId: ID
  itemId: ID
  boxNum: Int
}

input DeliveryItemUpdateManyDataInput {
  productId: ID
  itemId: ID
  boxNum: Int
}

input DeliveryItemUpdateManyMutationInput {
  productId: ID
  itemId: ID
  boxNum: Int
}

input DeliveryItemUpdateManyWithoutDeliveryNoteInput {
  create: [DeliveryItemCreateWithoutDeliveryNoteInput!]
  delete: [DeliveryItemWhereUniqueInput!]
  connect: [DeliveryItemWhereUniqueInput!]
  set: [DeliveryItemWhereUniqueInput!]
  disconnect: [DeliveryItemWhereUniqueInput!]
  update: [DeliveryItemUpdateWithWhereUniqueWithoutDeliveryNoteInput!]
  upsert: [DeliveryItemUpsertWithWhereUniqueWithoutDeliveryNoteInput!]
  deleteMany: [DeliveryItemScalarWhereInput!]
  updateMany: [DeliveryItemUpdateManyWithWhereNestedInput!]
}

input DeliveryItemUpdateManyWithWhereNestedInput {
  where: DeliveryItemScalarWhereInput!
  data: DeliveryItemUpdateManyDataInput!
}

input DeliveryItemUpdateWithoutDeliveryNoteDataInput {
  productId: ID
  itemId: ID
  boxNum: Int
}

input DeliveryItemUpdateWithWhereUniqueWithoutDeliveryNoteInput {
  where: DeliveryItemWhereUniqueInput!
  data: DeliveryItemUpdateWithoutDeliveryNoteDataInput!
}

input DeliveryItemUpsertWithWhereUniqueWithoutDeliveryNoteInput {
  where: DeliveryItemWhereUniqueInput!
  update: DeliveryItemUpdateWithoutDeliveryNoteDataInput!
  create: DeliveryItemCreateWithoutDeliveryNoteInput!
}

input DeliveryItemWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  deliveryNote: DeliveryNoteWhereInput
  productId: ID
  productId_not: ID
  productId_in: [ID!]
  productId_not_in: [ID!]
  productId_lt: ID
  productId_lte: ID
  productId_gt: ID
  productId_gte: ID
  productId_contains: ID
  productId_not_contains: ID
  productId_starts_with: ID
  productId_not_starts_with: ID
  productId_ends_with: ID
  productId_not_ends_with: ID
  itemId: ID
  itemId_not: ID
  itemId_in: [ID!]
  itemId_not_in: [ID!]
  itemId_lt: ID
  itemId_lte: ID
  itemId_gt: ID
  itemId_gte: ID
  itemId_contains: ID
  itemId_not_contains: ID
  itemId_starts_with: ID
  itemId_not_starts_with: ID
  itemId_ends_with: ID
  itemId_not_ends_with: ID
  boxNum: Int
  boxNum_not: Int
  boxNum_in: [Int!]
  boxNum_not_in: [Int!]
  boxNum_lt: Int
  boxNum_lte: Int
  boxNum_gt: Int
  boxNum_gte: Int
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [DeliveryItemWhereInput!]
  OR: [DeliveryItemWhereInput!]
  NOT: [DeliveryItemWhereInput!]
}

input DeliveryItemWhereUniqueInput {
  id: ID
}

type DeliveryNote {
  id: ID!
  code: String!
  salesOrderId: ID!
  invoiceId: ID!
  userId: ID
  customerId: ID
  state: DeliveryStatus!
  deliveryDate: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
  items(where: DeliveryItemWhereInput, orderBy: DeliveryItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [DeliveryItem!]
}

type DeliveryNoteConnection {
  pageInfo: PageInfo!
  edges: [DeliveryNoteEdge]!
  aggregate: AggregateDeliveryNote!
}

input DeliveryNoteCreateInput {
  id: ID
  code: String!
  salesOrderId: ID!
  invoiceId: ID!
  userId: ID
  customerId: ID
  state: DeliveryStatus!
  deliveryDate: DateTime
  items: DeliveryItemCreateManyWithoutDeliveryNoteInput
}

input DeliveryNoteCreateOneWithoutItemsInput {
  create: DeliveryNoteCreateWithoutItemsInput
  connect: DeliveryNoteWhereUniqueInput
}

input DeliveryNoteCreateWithoutItemsInput {
  id: ID
  code: String!
  salesOrderId: ID!
  invoiceId: ID!
  userId: ID
  customerId: ID
  state: DeliveryStatus!
  deliveryDate: DateTime
}

type DeliveryNoteEdge {
  node: DeliveryNote!
  cursor: String!
}

enum DeliveryNoteOrderByInput {
  id_ASC
  id_DESC
  code_ASC
  code_DESC
  salesOrderId_ASC
  salesOrderId_DESC
  invoiceId_ASC
  invoiceId_DESC
  userId_ASC
  userId_DESC
  customerId_ASC
  customerId_DESC
  state_ASC
  state_DESC
  deliveryDate_ASC
  deliveryDate_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type DeliveryNotePreviousValues {
  id: ID!
  code: String!
  salesOrderId: ID!
  invoiceId: ID!
  userId: ID
  customerId: ID
  state: DeliveryStatus!
  deliveryDate: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
}

type DeliveryNoteSubscriptionPayload {
  mutation: MutationType!
  node: DeliveryNote
  updatedFields: [String!]
  previousValues: DeliveryNotePreviousValues
}

input DeliveryNoteSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: DeliveryNoteWhereInput
  AND: [DeliveryNoteSubscriptionWhereInput!]
  OR: [DeliveryNoteSubscriptionWhereInput!]
  NOT: [DeliveryNoteSubscriptionWhereInput!]
}

input DeliveryNoteUpdateInput {
  code: String
  salesOrderId: ID
  invoiceId: ID
  userId: ID
  customerId: ID
  state: DeliveryStatus
  deliveryDate: DateTime
  items: DeliveryItemUpdateManyWithoutDeliveryNoteInput
}

input DeliveryNoteUpdateManyMutationInput {
  code: String
  salesOrderId: ID
  invoiceId: ID
  userId: ID
  customerId: ID
  state: DeliveryStatus
  deliveryDate: DateTime
}

input DeliveryNoteUpdateOneRequiredWithoutItemsInput {
  create: DeliveryNoteCreateWithoutItemsInput
  update: DeliveryNoteUpdateWithoutItemsDataInput
  upsert: DeliveryNoteUpsertWithoutItemsInput
  connect: DeliveryNoteWhereUniqueInput
}

input DeliveryNoteUpdateWithoutItemsDataInput {
  code: String
  salesOrderId: ID
  invoiceId: ID
  userId: ID
  customerId: ID
  state: DeliveryStatus
  deliveryDate: DateTime
}

input DeliveryNoteUpsertWithoutItemsInput {
  update: DeliveryNoteUpdateWithoutItemsDataInput!
  create: DeliveryNoteCreateWithoutItemsInput!
}

input DeliveryNoteWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  code: String
  code_not: String
  code_in: [String!]
  code_not_in: [String!]
  code_lt: String
  code_lte: String
  code_gt: String
  code_gte: String
  code_contains: String
  code_not_contains: String
  code_starts_with: String
  code_not_starts_with: String
  code_ends_with: String
  code_not_ends_with: String
  salesOrderId: ID
  salesOrderId_not: ID
  salesOrderId_in: [ID!]
  salesOrderId_not_in: [ID!]
  salesOrderId_lt: ID
  salesOrderId_lte: ID
  salesOrderId_gt: ID
  salesOrderId_gte: ID
  salesOrderId_contains: ID
  salesOrderId_not_contains: ID
  salesOrderId_starts_with: ID
  salesOrderId_not_starts_with: ID
  salesOrderId_ends_with: ID
  salesOrderId_not_ends_with: ID
  invoiceId: ID
  invoiceId_not: ID
  invoiceId_in: [ID!]
  invoiceId_not_in: [ID!]
  invoiceId_lt: ID
  invoiceId_lte: ID
  invoiceId_gt: ID
  invoiceId_gte: ID
  invoiceId_contains: ID
  invoiceId_not_contains: ID
  invoiceId_starts_with: ID
  invoiceId_not_starts_with: ID
  invoiceId_ends_with: ID
  invoiceId_not_ends_with: ID
  userId: ID
  userId_not: ID
  userId_in: [ID!]
  userId_not_in: [ID!]
  userId_lt: ID
  userId_lte: ID
  userId_gt: ID
  userId_gte: ID
  userId_contains: ID
  userId_not_contains: ID
  userId_starts_with: ID
  userId_not_starts_with: ID
  userId_ends_with: ID
  userId_not_ends_with: ID
  customerId: ID
  customerId_not: ID
  customerId_in: [ID!]
  customerId_not_in: [ID!]
  customerId_lt: ID
  customerId_lte: ID
  customerId_gt: ID
  customerId_gte: ID
  customerId_contains: ID
  customerId_not_contains: ID
  customerId_starts_with: ID
  customerId_not_starts_with: ID
  customerId_ends_with: ID
  customerId_not_ends_with: ID
  state: DeliveryStatus
  state_not: DeliveryStatus
  state_in: [DeliveryStatus!]
  state_not_in: [DeliveryStatus!]
  deliveryDate: DateTime
  deliveryDate_not: DateTime
  deliveryDate_in: [DateTime!]
  deliveryDate_not_in: [DateTime!]
  deliveryDate_lt: DateTime
  deliveryDate_lte: DateTime
  deliveryDate_gt: DateTime
  deliveryDate_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  items_every: DeliveryItemWhereInput
  items_some: DeliveryItemWhereInput
  items_none: DeliveryItemWhereInput
  AND: [DeliveryNoteWhereInput!]
  OR: [DeliveryNoteWhereInput!]
  NOT: [DeliveryNoteWhereInput!]
}

input DeliveryNoteWhereUniqueInput {
  id: ID
  code: String
}

enum DeliveryStatus {
  SENT
  PICKED
  PACKED
  DELIVERED
  DELETED
}

scalar Long

type Mutation {
  createDeliveryItem(data: DeliveryItemCreateInput!): DeliveryItem!
  updateDeliveryItem(data: DeliveryItemUpdateInput!, where: DeliveryItemWhereUniqueInput!): DeliveryItem
  updateManyDeliveryItems(data: DeliveryItemUpdateManyMutationInput!, where: DeliveryItemWhereInput): BatchPayload!
  upsertDeliveryItem(where: DeliveryItemWhereUniqueInput!, create: DeliveryItemCreateInput!, update: DeliveryItemUpdateInput!): DeliveryItem!
  deleteDeliveryItem(where: DeliveryItemWhereUniqueInput!): DeliveryItem
  deleteManyDeliveryItems(where: DeliveryItemWhereInput): BatchPayload!
  createDeliveryNote(data: DeliveryNoteCreateInput!): DeliveryNote!
  updateDeliveryNote(data: DeliveryNoteUpdateInput!, where: DeliveryNoteWhereUniqueInput!): DeliveryNote
  updateManyDeliveryNotes(data: DeliveryNoteUpdateManyMutationInput!, where: DeliveryNoteWhereInput): BatchPayload!
  upsertDeliveryNote(where: DeliveryNoteWhereUniqueInput!, create: DeliveryNoteCreateInput!, update: DeliveryNoteUpdateInput!): DeliveryNote!
  deleteDeliveryNote(where: DeliveryNoteWhereUniqueInput!): DeliveryNote
  deleteManyDeliveryNotes(where: DeliveryNoteWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  deliveryItem(where: DeliveryItemWhereUniqueInput!): DeliveryItem
  deliveryItems(where: DeliveryItemWhereInput, orderBy: DeliveryItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [DeliveryItem]!
  deliveryItemsConnection(where: DeliveryItemWhereInput, orderBy: DeliveryItemOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DeliveryItemConnection!
  deliveryNote(where: DeliveryNoteWhereUniqueInput!): DeliveryNote
  deliveryNotes(where: DeliveryNoteWhereInput, orderBy: DeliveryNoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [DeliveryNote]!
  deliveryNotesConnection(where: DeliveryNoteWhereInput, orderBy: DeliveryNoteOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DeliveryNoteConnection!
  node(id: ID!): Node
}

type Subscription {
  deliveryItem(where: DeliveryItemSubscriptionWhereInput): DeliveryItemSubscriptionPayload
  deliveryNote(where: DeliveryNoteSubscriptionWhereInput): DeliveryNoteSubscriptionPayload
}
`
      }
    